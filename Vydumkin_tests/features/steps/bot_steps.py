
from behave import given, when, then
from datetime import datetime
import random

# === TC-011 ===
@when('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–º–∞–Ω–¥—É "/datetime"')
def step_get_datetime(context):
    context.response = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

@then('–ë–æ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π')
def step_check_datetime(context):
    assert isinstance(context.response, str)
    assert len(context.response) > 10  # –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã

# === TC-012 ===
@when('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–º–∞–Ω–¥—É "/fact"')
def step_get_fact(context):
    facts = [
        "–§–∞–∫—Ç 1: –í–æ–¥–∞ –∫–∏–ø–∏—Ç –ø—Ä–∏ 100¬∞C.",
        "–§–∞–∫—Ç 2: –ó–µ–º–ª—è –≤—Ä–∞—â–∞–µ—Ç—Å—è –≤–æ–∫—Ä—É–≥ –°–æ–ª–Ω—Ü–∞.",
        "–§–∞–∫—Ç 3: Python ‚Äî –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è."
    ]
    context.response = random.choice(facts)

@then('–ë–æ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π —Ñ–∞–∫—Ç')
def step_check_fact(context):
    assert context.response is not None
    assert isinstance(context.response, str)
    assert len(context.response.strip()) > 0

# === TC-013 –∏ TC-014 ===
@given('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "user@example.com" —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω')
def step_registered_user(context):
    context.users = {"user@example.com": "ValidPass123!"}

@when('–í–≤–æ–¥–∏—Ç –∏–º—è "user@example.com"')
def step_enter_username(context):
    context.entered_username = "user@example.com"

@when('–í–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å "ValidPass123!"')
def step_enter_valid_password(context):
    context.entered_password = "ValidPass123!"

@when('–í–≤–æ–¥–∏—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å "WrongPassword"')
def step_enter_invalid_password(context):
    context.entered_password = "WrongPassword"

@then('–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"')
def step_success_login(context):
    assert context.users.get(context.entered_username) == context.entered_password

@then('–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å"')
def step_failed_login(context):
    assert context.users.get(context.entered_username) != context.entered_password

# === TC-015 ===
@when('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–º–∞–Ω–¥—É "/roulette"')
def step_start_roulette(context):
    context.response = "üé≤ –†—É–ª–µ—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞! –í—ã–±–µ—Ä–∏—Ç–µ '–ö—Ä–∞—Å–Ω–æ–µ' –∏–ª–∏ '–ß–µ—Ä–Ω–æ–µ':"

@then('–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "üé≤ –†—É–ª–µ—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞! –í—ã–±–µ—Ä–∏—Ç–µ \'–ö—Ä–∞—Å–Ω–æ–µ\' –∏–ª–∏ \'–ß–µ—Ä–Ω–æ–µ\':"')
def step_roulette_prompt(context):
    assert context.response == "üé≤ –†—É–ª–µ—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞! –í—ã–±–µ—Ä–∏—Ç–µ '–ö—Ä–∞—Å–Ω–æ–µ' –∏–ª–∏ '–ß–µ—Ä–Ω–æ–µ':"

# === TC-016 –∏ TC-017 ===
@given('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä—É–ª–µ—Ç–∫–∏ –±—É–¥–µ—Ç "{result}"')
def step_set_roulette_result(context, result):
    context.roulette_result = result.lower()

@when('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç "{choice}"')
def step_user_choice(context, choice):
    choice = choice.lower()
    if choice not in ["–∫—Ä–∞—Å–Ω–æ–µ", "—á–µ—Ä–Ω–æ–µ"]:
        context.response = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–ö—Ä–∞—Å–Ω–æ–µ' –∏–ª–∏ '–ß–µ—Ä–Ω–æ–µ'."
    elif choice == context.roulette_result:
        context.response = "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏"
    else:
        context.response = "—É–≤—ã, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏"

@then('–ë–æ—Ç –≥–æ–≤–æ—Ä–∏—Ç "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏"')
def step_win_response(context):
    assert context.response == "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏"

@then('–ë–æ—Ç –≥–æ–≤–æ—Ä–∏—Ç "—É–≤—ã, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏"')
def step_lose_response(context):
    assert context.response == "—É–≤—ã, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏"

# === TC-018 ===
@then('–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ \'–ö—Ä–∞—Å–Ω–æ–µ\' –∏–ª–∏ \'–ß–µ—Ä–Ω–æ–µ\'."')
def step_invalid_choice(context):
    assert context.response == "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–ö—Ä–∞—Å–Ω–æ–µ' –∏–ª–∏ '–ß–µ—Ä–Ω–æ–µ'."

# === TC-019 ===
@when('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É')
def step_exit_game(context):
    context.response = "–ü—Ä–æ–∏–∑–æ—à–µ–ª –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é"

@then('–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü—Ä–æ–∏–∑–æ—à–µ–ª –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é"')
def step_back_to_menu(context):
    assert context.response == "–ü—Ä–æ–∏–∑–æ—à–µ–ª –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é"

# === TC-020 ===
@when('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–º–∞–Ω–¥—É "/login"')
def step_login_command(context):
    context.response = "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email –¥–ª—è –≤—Ö–æ–¥–∞:"

@then('–ü–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email –¥–ª—è –≤—Ö–æ–¥–∞:"')
def step_login_prompt(context):
    assert context.response == "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email –¥–ª—è –≤—Ö–æ–¥–∞:"
 